name: Build container images

on:
  workflow_call:
    inputs:
      base_image_name:
        type: string
        required: true
      services:
        type: string
        required: true
      platforms:
        type: string
        default: "linux/amd64"
        required: false
      push:
        type: boolean
        default: false
        required: false
      timeout:
        type: number
        default: 45
        required: false

jobs:
  build:
    name: Build image
    runs-on: ubuntu-latest
    timeout-minutes: ${{ inputs.timeout }}

    strategy:
      fail-fast: true
      matrix:
        service: ${{ fromJson(inputs.services) }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        platforms:  ${{ inputs.platforms }}

    - name: Login to container registry
      if:   ${{ inputs.push }}
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Determine latest semver tag
      id:   latest
      run: |
        echo "version=$(git tag | sort -V | tail -n 1)" >> "$GITHUB_OUTPUT"

    - name: Determine container image name
      id:   image_name
      run: |
        echo "full=${{ inputs.base_image_name }}$(echo ${{ matrix.service }} | sed s#/#-#g)" >> "$GITHUB_OUTPUT"
        cat $GITHUB_OUTPUT

    - name: Get tagging metadata
      id:   meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ steps.image_name.outputs.full }}
        flavor:
          latest=false
        tags: |
          type=edge
          type=raw,value=latest,enable=${{ github.ref_type == 'tag' && github.ref_name == steps.latest.outputs.version }}
          type=semver,pattern={{version}}
          type=ref,event=branch,enable=${{ github.ref_name != 'main' }}
          type=ref,event=pr

    - name: Build and push container image
      uses: docker/build-push-action@v6
      with:
        platforms:  ${{ inputs.platforms }}
        provenance: false
        context:    ${{ matrix.service }}
        tags:       ${{ steps.meta.outputs.tags }}
        labels:     ${{ steps.meta.outputs.labels }}
        push:       ${{ inputs.push }}
        cache-from: type=gha
        cache-to:   type=gha,mode=max

    - name: Output tags
      if: inputs.push
      run: 'echo "::notice::Tags pushed: ${{ steps.meta.outputs.tags }}"'

    - name: Update registry description
      if:   ${{ github.ref_type == 'tag' && github.ref_name == steps.latest.outputs.version }}
      uses: christian-korneck/update-container-description-action@v1
      env:
        DOCKER_USER: ${{ secrets.registry_user }}
        DOCKER_PASS: ${{ secrets.registry_token }}
      with:
        destination_container_repo: ${{ steps.image_name.outputs.full }}
        provider: dockerhub
        short_description: CourseMapper-webserver, ${{ matrix.service }} service
        readme_file: 'README.md'
      continue-on-error: true
