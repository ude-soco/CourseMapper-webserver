name: Build container images

on:
  workflow_call:
    inputs:
      base_image_name:
        required: true
        type: string
      services:
        required: true
        type: string
      platforms:
        type: string
        default: "linux/amd64"
        required: false
      registry:
        required: false
        type: string
        default: "hub.docker.com"
      push:
        required: false
        type: boolean
        default: false
      timeout:
        required: false
        type: number
        default: 10
    secrets:
      registry_user:
        required: false
      registry_token:
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: ${{ inputs.timeout }}

    strategy:
      fail-fast: true
      matrix:
        service: ${{ fromJson(inputs.services) }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to container registry
      if:   ${{ inputs.push }}
      uses: docker/login-action@v2
      with:
        registry: ${{ inputs.registry }}
        username: ${{ secrets.registry_user }}
        password: ${{ secrets.registry_token }}

    - name: Get tagging metadata
      id:   meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ inputs.base_image_name }}${{ matrix.service }}
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}
          type=ref,event=branch
          type=ref,event=pr

    - name: Build and push container image
      uses: docker/build-push-action@v4
      with:
        platforms:  ${{ inputs.platforms }}
        context:    ${{ matrix.service }}
        tags:       ${{ steps.meta.outputs.tags }}
        labels:     ${{ steps.meta.outputs.labels }}
        push:       ${{ inputs.push }}
        cache-from: type=gha
        cache-to:   type=gha,mode=max
